server {
    listen 80 default_server;
    server_name _;

    # Enable larger uploads and prevent timeouts
    client_max_body_size 10M;
    proxy_read_timeout 300s;
    proxy_connect_timeout 75s;
    proxy_send_timeout 300s;

    # Global proxy settings
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    chunked_transfer_encoding on;

    # Enhanced logging for debugging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log combined;

    # Ollama proxy with enhanced DNS resolver settings
    location / {
        resolver 127.0.0.11 ipv6=off valid=30s;
        set $upstream_host host.docker.internal;
        proxy_pass http://$upstream_host:11434;
        proxy_buffering off;
        proxy_cache off;
        
        # Additional headers for inter-container communication
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Host $http_host;
        
        # Increase subnet timeouts
        proxy_next_upstream_timeout 600s;
        proxy_next_upstream_tries 3;
    }

    # Direct vLLM endpoints
    location ~ ^/v1/vllm(/.*)$ {
        resolver 127.0.0.11 ipv6=off valid=30s;
        set $upstream_host host.docker.internal;
        proxy_pass http://$upstream_host:8000/v1$1$is_args$args;
        proxy_buffering off;
        proxy_cache off;
        
        # Headers
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Host $http_host;
        
        # Timeouts
        proxy_next_upstream_timeout 600s;
        proxy_next_upstream_tries 3;
    }
    
    # Alternative vLLM path format
    location ~ ^/vllm/v1(/.*)$ {
        resolver 127.0.0.11 ipv6=off valid=30s;
        set $upstream_host host.docker.internal;
        proxy_pass http://$upstream_host:8000/v1$1$is_args$args;
        proxy_buffering off;
        proxy_cache off;
        
        # Headers
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Host $http_host;
        
        # Timeouts
        proxy_next_upstream_timeout 600s;
        proxy_next_upstream_tries 3;
    }
    
    # Simpler vLLM path
    location /vllm/ {
        resolver 127.0.0.11 ipv6=off valid=30s;
        set $upstream_host host.docker.internal;
        proxy_pass http://$upstream_host:8000/;
        proxy_buffering off;
        proxy_cache off;
        
        # Headers
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Host $http_host;
        
        # Timeouts
        proxy_next_upstream_timeout 600s;
        proxy_next_upstream_tries 3;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
    }
}