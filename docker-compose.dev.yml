services:
  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    networks:
      - picollm
    configs:
      - source: qdrant_config
        target: /qdrant_config.yaml
    volumes:
      - qdrant_data:/qdrant/storage
    command: [ "./qdrant", "--config-path", "/qdrant_config.yaml" ]

  postgres:
    build: ./backend/deploy/pg
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data 
    networks:
      - picollm
    restart: unless-stopped
    depends_on:
      - qdrant

  fastapi:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - postgres
      - qdrant
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      HF_HOME: "/root/.cache/huggingface"
    networks:
      - picollm
    volumes:
      - ${HF_HOME:-~/.cache/huggingface}:/root/.cache/huggingface

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    depends_on:
      - fastapi
    networks:
      - picollm
    volumes:
      - ./frontend:/app
      - /app/node_modules

  nginx:
    build: ./nginx
    ports:
      - "11435:80"
    networks:
      - picollm
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  picollm:
    driver: bridge

volumes:
  postgres_data:
    name: pg_data
  qdrant_data:
    name: qdrant_data

configs:
  qdrant_config:
    content: |
      log_level: INFO
